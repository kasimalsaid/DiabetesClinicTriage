name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Determine version and model
        id: version
        run: |
          VERSION="${GITHUB_REF_NAME}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          if [[ "${VERSION}" == v0.2* ]]; then
            echo "model=ridge" >> $GITHUB_OUTPUT
          else
            echo "model=linear" >> $GITHUB_OUTPUT
          fi
      - name: Train for release
        run: |
          python src/train.py --version "${{ steps.version.outputs.version }}" --model "${{ steps.version.outputs.model }}"
          cat artifacts/metrics.json
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: |
          IMAGE="ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}"
          docker build -t "$IMAGE" .
      - name: Smoke test container
        run: |
          IMAGE="ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}"
          docker run -d --rm -p 8080:8080 --name vdc "$IMAGE"
          sleep 3
          curl -f http://localhost:8080/health | tee health.json
          docker stop vdc
      - name: Push image
        run: |
          IMAGE="ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}"
          docker push "$IMAGE"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            See CHANGELOG.md for details.
          files: |
            artifacts/metrics.json
